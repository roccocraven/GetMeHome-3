<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Search Results</title>
    <style>
        /* General styles */
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
        }

        h1 {
            text-align: center;
            margin-top: 20px;
        }

        #results {
            margin: 20px auto;
            width: 80%;
            padding: 10px;
            border: 1px solid #ddd;
        }

        .result-item {
            padding: 10px;
            border-bottom: 1px solid #ccc;
        }

        .result-item:last-child {
            border-bottom: none;
        }

        .highlight {
            background-color: #f0f8ff;
            border-left: 4px solid #4caf50;
        }

        .error {
            color: red;
            text-align: center;
        }

        /* Loading spinner */
        .spinner {
            margin: 0 auto;
            border: 4px solid rgba(0, 0, 0, 0.1);
            width: 40px;
            height: 40px;
            border-radius: 50%;
            border-left-color: #4caf50;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <h1>Search Results</h1>
    <!-- Results container -->
    <div id="results">
        <div class="spinner"></div>
    </div>

    <script>
        // Function to extract query parameters from the URL
        function getQueryParams() {
            const params = new URLSearchParams(window.location.search);
            return {
                origin: params.get("origin"),
                destination: params.get("destination"),
                mode: params.get("mode"),
                maxPrice: params.get("maxPrice"),
                sortBy: params.get("sortBy")
            };
        }

        // Fetch results from the backend API and display them
        async function fetchResults() {
            // Get query parameters
            const { origin, destination, mode, maxPrice, sortBy } = getQueryParams();

            // Validate input parameters
            if (!origin || !destination) {
                document.getElementById("results").innerHTML = `<p class="error">Please specify both origin and destination.</p>`;
                return;
            }

            try {
                // Fetch data from the backend API
                const response = await fetch(
                    `http://localhost:10000/search?origin=${origin}&destination=${destination}&mode=${mode}&maxPrice=${maxPrice}&sortBy=${sortBy}`
                );

                // Parse JSON response
                const data = await response.json();

                // Get results container
                const resultsDiv = document.getElementById("results");
                resultsDiv.innerHTML = ""; // Clear the loading spinner

                // Handle response errors
                if (!response.ok) {
                    resultsDiv.innerHTML = `<p class="error">${data.error || "Failed to load results."}</p>`;
                    return;
                }

                // Filter results by mode
                let filteredResults = data;
                if (mode) {
                    filteredResults = data.filter(item => item.mode.toLowerCase() === mode.toLowerCase());
                }

                // Display error if no results match
                if (filteredResults.length === 0) {
                    resultsDiv.innerHTML = `<p class="error">No results found for mode: ${mode}</p>`;
                    return;
                }

                // Apply sorting if specified
                if (sortBy === "price") {
                    filteredResults.sort((a, b) => a.price - b.price); // Sort by cheapest price
                } else if (sortBy === "duration") {
                    filteredResults.sort((a, b) => a.duration - b.duration); // Sort by shortest duration
                }

                // Display each result
                filteredResults.forEach((item, index) => {
                    const resultItem = document.createElement("div");
                    resultItem.classList.add("result-item");

                    // Highlight the first result
                    if (index === 0) {
                        resultItem.classList.add("highlight");
                    }

                    resultItem.innerHTML = `
                        <p><strong>Mode:</strong> ${item.mode}</p>
                        <p><strong>From:</strong> ${item.from}</p>
                        <p><strong>To:</strong> ${item.to}</p>
                        <p><strong>Price:</strong> $${item.price}</p>
                        <p><strong>Duration:</strong> ${item.duration} hours</p>
                    `;
                    resultsDiv.appendChild(resultItem);
                });

            } catch (error) {
                // Display error for fetch issues
                console.error("Error fetching results:", error);
                document.getElementById("results").innerHTML = `<p class="error">Failed to load results.</p>`;
            }
        }

        // Fetch and display results when the page loads
        fetchResults();
    </script>
</body>
</html>
